{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelServices.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelServices","_apiBase","process","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","char","_transformResponse","getCharacter","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","error","alt","RandomChar","state","loading","onCharLoaded","setState","onCharLoading","onError","marvelServices","getRandomChar","randomId","Math","floor","random","then","catch","console","log","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","props","styleImage","objectFit","CharList","chars","newCharsLoading","charsListEnd","onRequest","onLoadingNewItems","getListChar","onScroll","documentHeight","document","documentElement","scrollHeight","window","pageYOffset","clientHeight","removeEventListener","newChars","ended","length","refItems","setRef","ref","push","setActiveItem","forEach","item","classList","remove","add","renderItems","arr","i","onSelectedChar","tabIndex","onKeyPress","e","key","addEventListener","charGridStyles","gridTemplateColumns","disabled","Skeleton","CharInfo","changeChar","charId","prevProps","prevState","skeleton","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eccc3fcd.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelServices {\r\n    _apiBase = process.env.REACT_APP_API_BASE;\r\n    _apiKey = process.env.REACT_APP_API_KEY;\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}/characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n\r\n        return res.data.results.map(char => this._transformResponse(char));\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}/characters/${id}?${this._apiKey}`);\r\n\r\n        return this._transformResponse(res.data.results[0]);\r\n    }\r\n\r\n    _transformResponse = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 215)}...` : 'Sorry, we don\\'t have any data for this character.',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelServices;","const Spinner = () => {\r\n    return (\r\n        <div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n                <g transform=\"translate(80,50)\">\r\n                    <g transform=\"rotate(0)\">\r\n                        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                        </circle>\r\n                    </g>\r\n                </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                    <g transform=\"rotate(45)\">\r\n                        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                        </circle>\r\n                    </g>\r\n                </g><g transform=\"translate(50,80)\">\r\n                    <g transform=\"rotate(90)\">\r\n                        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                        </circle>\r\n                    </g>\r\n                </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                    <g transform=\"rotate(135)\">\r\n                        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                        </circle>\r\n                    </g>\r\n                </g><g transform=\"translate(20,50.00000000000001)\">\r\n                    <g transform=\"rotate(180)\">\r\n                        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                        </circle>\r\n                    </g>\r\n                </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                    <g transform=\"rotate(225)\">\r\n                        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                        </circle>\r\n                    </g>\r\n                </g><g transform=\"translate(49.99999999999999,20)\">\r\n                    <g transform=\"rotate(270)\">\r\n                        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                        </circle>\r\n                    </g>\r\n                </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                    <g transform=\"rotate(315)\">\r\n                        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                        </circle>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import error from './error.gif';\r\nimport './errorMessage.scss';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div>\r\n            <img className='errorMessage' src={error} alt=\"error\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nimport { Component } from 'react';\nimport MarvelServices from '../../services/MarvelServices';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n\n    componentDidMount() {\n        this.getRandomChar();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n            error: false,\n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            error: false,\n            loading: true,\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n    marvelServices = new MarvelServices();\n\n    getRandomChar = () => {\n        const randomId = Math.floor(Math.random() * (1011400 - 1011000) + 1011100)\n\n        this.onCharLoading();\n        this.marvelServices\n            .getCharacter(randomId)\n            .then(this.onCharLoaded)\n            .catch(error => {\n                this.onError();\n                console.log(error);\n            })\n    }\n\n    render() {\n        let { char, loading, error } = this.state;\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(error || loading) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.getRandomChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = (props) => {\n    let { name, description, thumbnail, homepage, wiki } = props.char;\n\n    let styleImage = { objectFit: 'cover' };\n\n    if (thumbnail.slice(-23, -4) === 'image_not_available') {\n        styleImage = { objectFit: 'contain' };\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={styleImage} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelServices from '../../services/MarvelServices';\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        chars: [],\n        loading: true,\n        error: false,\n        offset: 210,\n        newCharsLoading: false,\n        charsListEnd: false,\n    }\n\n    marvelServices = new MarvelServices();\n\n    componentDidMount() {\n        this.onRequest();\n\n        window.addEventListener('scroll', this.onScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.onScroll);\n    }\n\n    onRequest = (offset) => {\n        this.onLoadingNewItems();\n        this.marvelServices\n            .getAllCharacters(offset)\n            .then(this.getListChar)\n            .catch(error => {\n                console.log(error);\n                this.onError();\n            })\n    }\n\n    onScroll = () => {\n        const documentHeight = document.documentElement.scrollHeight;\n        const scrollHeight = window.pageYOffset + document.documentElement.clientHeight;\n\n        if (this.state.offset < 219) return;\n        if (this.state.newCharsLoading) return;\n        if (this.state.charsListEnd) {\n            window.removeEventListener('scroll', this.onScroll);\n        }\n\n        if (documentHeight === scrollHeight) {\n            this.onRequest(this.state.offset);\n        }\n    }\n\n    getListChar = (newChars) => {\n        let ended = false;\n\n        if (newChars.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({ chars, offset }) => ({\n            chars: [...chars, ...newChars],\n            loading: false,\n            newCharsLoading: false,\n            offset: offset + 9,\n            charsListEnd: ended,\n        }));\n    }\n\n    onLoadingNewItems = () => {\n        this.setState({\n            newCharsLoading: true,\n        })\n    }\n\n    refItems = [];\n\n    setRef = ref => {\n        this.refItems.push(ref);\n    }\n\n\n\n    setActiveItem = (id) => {\n        console.log(this.refItems[id], id);\n        this.refItems.forEach(item => item.classList.remove('char__item_selected'));\n        this.refItems[id].classList.add('char__item_selected');\n    }\n\n\n\n    renderItems = (arr) => {\n        return arr.map((char, i) => {\n            const { id, name, thumbnail } = char;\n            const { onSelectedChar } = this.props;\n\n            let styleImage = { objectFit: 'cover' };\n\n            if (thumbnail.slice(-23, -4) === 'image_not_available') {\n                styleImage = { objectFit: 'contain' };\n            }\n\n            return (\n                <li className=\"char__item\"\n                    key={id} tabIndex=\"0\"\n                    ref={this.setRef}\n                    onClick={() => {\n                        onSelectedChar(id);\n                        this.setActiveItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                            onSelectedChar(id);\n                            this.setActiveItem(i);\n                        }\n                    }}\n                >\n                    <img src={thumbnail} style={styleImage} alt={name} />\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n    render() {\n        const { chars, error, loading, offset, newCharsLoading, charsListEnd } = this.state;\n\n        const items = this.renderItems(chars);\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n\n        let charGridStyles = { gridTemplateColumns: 'repeat(3, 200px)' }\n\n        if (spinner) {\n            charGridStyles = { gridTemplateColumns: '1fr' }\n        }\n\n        return (\n            <div className=\"char__list\">\n                <ul className=\"char__grid\" style={charGridStyles}>\n                    {errorMessage}\n                    {spinner}\n                    {content}\n                </ul>\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newCharsLoading}\n                    onClick={() => this.onRequest(offset)}\n                    style={{ display: charsListEnd ? 'none' : 'block' }}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onSelectedChar: PropTypes.func.isRequired,\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelServices from '../../services/MarvelServices';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelServices = new MarvelServices();\n\n    componentDidMount() {\n        this.changeChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.charId !== prevProps.charId) {\n            this.changeChar();\n        }\n    }\n\n    changeChar = () => {\n        const { charId } = this.props;\n\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n        this.marvelServices\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(error => {\n                console.log(error);\n                this.onError();\n            })\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n            error: false,\n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            error: false,\n            loading: true,\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />;\n        const spinner = loading ? <Spinner /> : null;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {spinner}\n                {errorMessage}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    let styleImage = { objectFit: 'cover' };\n\n    if (thumbnail.slice(-23, -4) === 'image_not_available') {\n        styleImage = { objectFit: 'contain' };\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={styleImage} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length ? null : 'Sorry, we don\\'t comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n\n                        return (\n                            <li className=\"char__comics-item\" key={i}>\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number,\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false,\r\n    }\r\n\r\n    // используется для изменения стейта ошибки\r\n    // static getDerivedStateFromError(error) {\r\n    //     return { error: true };\r\n    // }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null,\n    }\n\n    onSelectedChar = (id) => {\n        this.setState({\n            selectedChar: id,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onSelectedChar={this.onSelectedChar} />\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}